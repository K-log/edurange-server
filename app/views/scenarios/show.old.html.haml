%div.modal#modal1{ :tabindex => "-1", :role => "dialog", "aria-labelledby" => "myModalLabel", "aria-hidden" => "true"}
  %div.modal-dialog
    %div.modal-content
      %div.modal-header
        %button.close{ :type => "button", "data-dismiss" => "modal", "aria-hidden" => "true"}
          &times;
        %h3.modal-title.inline#title
          Boot Log
      %div.modal-body#modalbody
      %div.modal-footer
        %button.btn.btn-default{"data-dismiss" => "modal"}
          Close

/ = link_to 'modal', "#modal1", :data => {:toggle=>"modal"}

= subscribe_to "/scenarios/#{@scenario.id}"
%div.panel.panel-default#scenario{data: {id: @scenario.id}}
  %div.panel-heading.nav.nav-pills

    %li
      %h4
        =@scenario.name + ":"

    %li
      / %p.navbar-text
      %span#scenario-status
        = @scenario.status
      - if @scenario.status == "booted"
        %span.booted#scenario-status-dot
          &#9679;
      - elsif @scenario.status == "boot_failed" or @scenario.status == "unboot_failed"
        %span.failed#scenario-status-dot
          &#9679;
      - else
        %span.stopped#scenario-status-dot
          &#9679;

    %li
      %span#nat-status
        nat ready
      %span.stopped#nat-status-dot
        &#9679;

    %li
      %span#instances-status
        - if @scenario.instances_initialized?
          instances ready
        - else
          instances not ready
      %span.stopped#instances-status-dot
        &#9679;

    %li.dropdown
      %a.dropdown-toggle{ "data-toggle" => "dropdown", href: "#", role: "button", "aria-expanded" => "false"}
        Actions
        %span.caret
      %ul.dropdown-menu{role: "menu"}
        %li
          - if @scenario.stopped?
            = link_to 'Boot', boot_toggle_scenario_path(@scenario), remote:true, id: 'boot-button'
          - elsif @scenario.booting?
            = link_to 'Boot', '#', id: 'boot-button'
          - elsif @scenario.booted?
            = link_to 'Unboot', boot_toggle_scenario_path(@scenario), remote:true, id: 'boot-button'
          - elsif @scenario.is_failed?
            = link_to 'Unboot', boot_toggle_scenario_path(@scenario), remote:true, id: 'boot-button'

          = link_to 'Destroy', @scenario, :method => :delete
          = link_to 'Show Boot Log', getlog_scenario_path(@scenario), remote: true

  %div.panel-body
    %script
      = "get_boot_status('#{@scenario.id}');"

    %div
      %h4 Instructions
      %dl
        = @scenario.instructions

    %div
      %dt
        %h4 Questions:
        %dl
          %dt= link_to 'questions', '/scoring/instructor/' + @scenario.id.to_s
          %dt= link_to 'answer_dump', scoring_answer_dump_path(scenario: @scenario)

    %div
      %h4 Players
      %dl
        - @scenario.groups.each do |group|
          %span.inline
            = "Team: " + group.name
            &nbsp&nbsp&nbsp
          = form_tag modify_players_scenario_path(group: group), class: "inline" do
            = select_tag "studentGroupName", options_for_select(@user.student_groups.pluck(:name))
            = submit_tag "add", name: "add", class: 'btn btn-default'
            = submit_tag "remove", name: "remove", class: 'btn btn-default'
          %p
          / %dl
          %table.table
            %tr
              %th Name
              %th Email
              %th Login
              %th Password
              %th Student Group
              %th Answers
              %th Answered
              / %th Score
            - group.players.each do |player|
              %tr
                - if player.user_id
                  - user = User.find(player.user_id)
                  %td= user.name
                  %td= user.email
                - else
                  %td
                  %td
                %td= player.login
                %td= player.password
                - if player.student_group
                  %td= player.student_group.name
                  %td= link_to 'answers', "/scoring/instructor_student/#{@scenario.id}/#{player.user_id}"
                  %td
                    - cnt = @scenario.questions.select{ |q| q.answers and q.answers.where("student_id = #{player.user_id}").size > 0 }.size
                    - total = @scenario.questions.size
                    %span{id: "answered-student-#{player.user_id}"}
                      = "#{cnt}/#{total}"
                  / %td= "#{correct}/#{total}"
                - else
                  %td
                  %td

    / %div
    /   %h4 Boot Progress
    /   %dl
    /     %dt.inline Status:
    /     %span#scenario-status
    /       = @scenario.status

    /     - if @scenario.status == "booted"
    /       %span.booted#scenario-status-dot
    /         &#9679;
    /     - elsif @scenario.status == "boot_failed" or @scenario.status == "unboot_failed"
    /       %span.failed#scenario-status-dot
    /         &#9679;
    /     - else
    /       %span.stopped#scenario-status-dot
    /         &#9679;

    /     %br
    /     %dt.inline
    /       Clouds Booted:
    /     %span#cloud-count
    /       = @cloud_booted
    /     of
    /     %span#cloud-total
    /       = @cloud_count
    /     %br
    /     %dt.inline
    /       Subnets Booted:
    /     %span#subnet-count
    /       = @subnet_booted
    /     of
    /     %span#subnet-total
    /       = @subnet_count
    /     %br
    /     %dt.inline
    /       Instances Booted:
    /     %span#instance-count
    /       = @instance_booted
    /     of
    /     %span#instance-total
    /       = @instance_count

  / %div.btn-group#scenario-buttons
  /   - if @scenario.booted? or @scenario.is_failed?
  /     - boot_button_text = "Unboot"
  /   - elsif @scenario.stopped?
  /     - boot_button_text = "Boot"
  /   - elsif @scenario.booting?
  /     - boot_button_text = "booting..."

  /   = link_to boot_button_text, boot_toggle_scenario_path(@scenario), remote:true, class: 'btn btn-primary', id: "boot-button"

  /   = link_to 'Back', scenarios_path, class: 'btn btn-default'
  /   = link_to 'Destroy', @scenario, :method => :delete, class: 'btn btn-default'
  /   /= link_to 'Test Console', test_console_scenario_path(@scenario), remote:true, class: 'btn btn-default'
  /   = link_to 'Log', getlog_scenario_path(@scenario), remote: true, class: 'btn btn-default'

  / %p
  / %span#boot-message

  / %h4#console-header Console Log
  / %pre#console
  /   - until @scenario.log
  /     = @scenario.log

  / %h4 Scoring
  / %dl
  /   = link_to 'Instructor View', '/scoring/instructor/' + @scenario.id.to_s
  /   \- shows questions and answers
  /   %p
  /   = link_to 'Student View', '/scoring/student/' + @scenario.id.to_s
  /   \- shows only questions, lets you answer them

  %div
    %dl
      %h4 Resources
      - @scenario.clouds.each do |cloud|
        %dl
          Cloud:
          %b= cloud.name
          status:
          = cloud.status
          , driver:
          = cloud.driver_id
          %p
          - cloud.subnets.each do |subnet|
            %dl
              Subnet:
              %b= subnet.name
              status:
              = subnet.status
              %p
              - subnet.instances.each do |instance|
                %dl
                  Instance:
                  %b=instance.name
                  IP Address:
                  =instance.ip_address
                  - if instance.internet_accessible
                    , Public IP:
                    %span{ id: instance.id.to_s + '-public-ip'}
                      - if instance.provider_instance_public_ip
                        =instance.provider_instance_public_ip
                      - else
                        Not Set
                    %span#foo
                  ,
                  %b Scoring Url:
                  = instance.scoring_url
                  ,
                  %b Scoring Page:
                  = instance.scoring_page
                  ,
                  %b Com Page:
                  = instance.com_page

                  %p
  / %h4 Documentation
  / %dl
  /   = link_to 'here', "/documentation/scenarios/#{@scenario.name}"
= link_to 'Back', scenarios_path, class: 'btn btn-default'
%li
  %input{ type: 'checkbox', id: 'item-cloud-' + cloud.id.to_s , checked: 'checked'}
    %label{ for: 'item-cloud-' + cloud.id.to_s}
      %span{ id: 'cloud-name-' + cloud.id.to_s}
        = cloud.name
      %div{ class: 'inline-block ' + cloud.status, id: 'cloud-status-dot-'+cloud.id.to_s}
        &#9679;

      - if cloud.booting?
        %div.spin.inline-block{ id: 'cloud-spinner-' + cloud.id.to_s}
      - else
        %div.inline-block{ id: 'cloud-spinner-' + cloud.id.to_s}

    %div.inline-block
      %div.dropdown{ id: 'dropdown-cloud-' + cloud.id.to_s}
        %button.btn.btn-default.dropdown-toggle{type:'button', id:'dropdown-button-cloud-'+cloud.id.to_s, "data-toggle" => 'dropdown', "aria-expanded" => "true"}
          %span.caret
        %ul.dropdown-menu{role: 'menu', "aria-labelledby" => 'dropdown-button-cloud-'+cloud.id.to_s}
          %li{role: 'presentation'}

            - if cloud.stopped?
              - boot_button_class = ""
              - unboot_button_class = "hidden"
            - elsif cloud.booted? or cloud.boot_failed?
              - boot_button_class = "hidden"
              - unboot_button_class = ""
            - elsif cloud.booting?
              - boot_button_class = "hidden"
              - unboot_button_class = "hidden"

            = link_to 'Boot', boot_cloud_scenario_path(cloud), method: :post, remote: true, id: "boot-button-cloud-#{cloud.id.to_s}", class: boot_button_class
            = link_to 'Unboot', unboot_cloud_scenario_path(cloud), method: :post, remote: true, id: "unboot-button-cloud-#{cloud.id.to_s}", class: unboot_button_class

            = link_to 'Show log', getlog_scenario_path(cloud, kind: 'cloud'), method: :post, remote: true
            = link_to 'Modify', "#modal-modify-cloud", method: :post,  :data => {:toggle=>"modal"}, :onclick => "$('#modal-modify-cloud').find('#modal-title').text('hi'); $('#modal-modify-cloud').find('#cloud_id').val('#{cloud.id}'); $('#modal-modify-cloud').find('#name').val('#{cloud.name}'); $('#modal-modify-cloud').find('#CIDR').val('#{cloud.cidr_block}');"
            %li{role: 'presentation'}
              = link_to 'Delete', destroy_cloud_scenario_path(cloud), method: :post, remote: true

    %ul{style: "padding-left: 20px;"}
      %li
        Status:
        %span{id: 'cloud-status-' + cloud.id.to_s}
          = cloud.status
      %li
        Driver:
        %span{id: 'cloud-driver-' + cloud.id.to_s}
          = cloud.driver_id == nil ? "not set" : cloud.driver_id
      %li
        CIDR:
        %span{ { id: 'cloud-cidr-' + cloud.id.to_s}}
          = cloud.cidr_block
      %p
      %li
        %input{ type: 'checkbox', id: 'item-subnet-label-' + cloud.id.to_s, checked: 'checked'}
          %label{ for: 'item-subnet-label-' + cloud.id.to_s}
            Subnets:
          %div.inline-block
            %div.dropdown
              %button.btn.btn-default.dropdown-toggle{type:'button', id:'dropdown-clouds', "data-toggle" => 'dropdown', "aria-expanded" => "true"}
                %span.caret
              %ul.dropdown-menu{role: 'menu', "aria-labelledby" => 'dropdown-clouds'}
                %li{role: 'presentation'}
                  = link_to 'Add Subnet', "#modal-add-subnet", :data => {:toggle=>"modal"}, onclick: "$('#modal-add-subnet').find('#cloud_id').val('#{cloud.id}')"
                %li{role: 'presentation'}
                  = link_to 'Destroy', "#modal-delete-subnet", method: :post, :data => {:toggle=>"modal"}

          %ul{id: "subnets-ul-" + cloud.id.to_s, style: "padding-left: 20px;"}
            - cloud.subnets.each do |subnet|
              = render '/scenarios/show/subnet', subnet: subnet
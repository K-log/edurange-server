%li{ id: 'cloud-li-' + cloud.id.to_s}
  %label{ for: 'item-cloud-' + cloud.id.to_s}
    %span{ id: 'cloud-name-' + cloud.id.to_s}
      = cloud.name
    %div{ class: 'inline-block ' + cloud.status, id: 'cloud-status-dot-'+cloud.id.to_s}
      &#9679;

    - if cloud.booting?
      %div.spin.inline-block{ id: 'cloud-spinner-' + cloud.id.to_s}
    - else
      %div.inline-block{ id: 'cloud-spinner-' + cloud.id.to_s}

  %div.inline-block
    %div.dropdown{ id: 'dropdown-cloud-' + cloud.id.to_s}
      %button.btn.btn-default.dropdown-toggle{type:'button', id:'dropdown-button-cloud-'+cloud.id.to_s, "data-toggle" => 'dropdown', "aria-expanded" => "true"}
        %span.caret
      %ul.dropdown-menu{role: 'menu', "aria-labelledby" => 'dropdown-button-cloud-'+cloud.id.to_s}
        %li{role: 'presentation'}

          - if cloud.stopped?
            - boot_button_class = ""
            - unboot_button_class = "hidden"
          - elsif cloud.booted? or cloud.boot_failed?
            - boot_button_class = "hidden"
            - unboot_button_class = ""
          - elsif cloud.booting?
            - boot_button_class = "hidden"
            - unboot_button_class = "hidden"

          = link_to 'Boot', boot_cloud_scenario_path(cloud_id: cloud), method: :post, remote: true, id: "boot-button-cloud-#{cloud.id.to_s}", class: boot_button_class
          = link_to 'Unboot', unboot_cloud_scenario_path(cloud_id: cloud), method: :post, remote: true, id: "unboot-button-cloud-#{cloud.id.to_s}", class: unboot_button_class

          = link_to 'Show Log', log_get_scenario_path(cloud, kind: 'cloud'), method: :post, remote: true
          
          - if cloud.scenario.custom?
            = link_to 'Modify', "#modal-modify-cloud", :data => {:toggle=>"modal"}, :onclick => "$('#modal-modify-cloud').find('#modal-title').text('#{cloud.name}'); $('#modal-modify-cloud').find('#cloud_id').val('#{cloud.id}'); $('#modal-modify-cloud').find('#name').val($('#cloud-name-#{cloud.id}').html().trim()); $('#modal-modify-cloud').find('#cidr_block').val($('#cloud-cidr-#{cloud.id}').html().trim()); $('#modal-modify-cloud').find('#name-div').removeClass('has-error'); $('#modal-modify-cloud').find('#name-help').html(''); $('#modal-modify-cloud').find('#cidr-div').removeClass('has-error'); $('#modal-modify-cloud').find('#cidr-help').html('');"
            %li{role: 'presentation'}
              = link_to 'Delete', cloud_delete_scenario_path(cloud_id: cloud), method: :post, remote: true

  %ul{style: "padding-left: 20px;"}
    %li
      Status:
      %span{id: 'cloud-status-' + cloud.id.to_s}
        = cloud.status
    %li
      Driver:
      %span{id: 'cloud-driver-' + cloud.id.to_s}
        = cloud.driver_id == nil ? "not set" : cloud.driver_id
    %li
      CIDR:
      %span{ { id: 'cloud-cidr-' + cloud.id.to_s}}
        = cloud.cidr_block
    %p
    %li
      %label{ for: 'item-subnet-label-' + cloud.id.to_s}
        Subnets:
        - if cloud.scenario.custom?
          %div.inline-block
            %div.dropdown
              %button.btn.btn-default.dropdown-toggle{type:'button', id:'dropdown-clouds', "data-toggle" => 'dropdown', "aria-expanded" => "true"}
                %span.caret
              %ul.dropdown-menu{role: 'menu', "aria-labelledby" => 'dropdown-clouds'}
                %li{role: 'presentation'}
                  = link_to 'Add Subnet', "#modal-add-subnet", :data => {:toggle=>"modal"}, onclick: "$('#modal-add-subnet').find('#cloud_id').val('#{cloud.id}'); $('#modal-add-subnet').find('#name-div').removeClass('has-error'); $('#modal-add-subnet').find('#name-help').html(''); $('#modal-add-subnet').find('#cidr-div').removeClass('has-error'); $('#modal-add-subnet').find('#cidr-help').html(''); $('#modal-add-subnet').find('#internet-accessible-div').removeClass('has-error'); $('#modal-add-subnet').find('#internet-accessible-help').html(''); $('#modal-add-subnet').find('#name').val(''); $('#modal-add-subnet').find('#cidr_block').val(''); $('#modal-add-subnet').find('#internet_accessible').val('false'); "

      %ul{id: "subnets-ul-" + cloud.id.to_s, style: "padding-left: 20px;"}
        - cloud.subnets.each do |subnet|
          = render '/scenarios/show/subnet', subnet: subnet
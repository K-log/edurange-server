# Packages
<% roles.each do |role| %>
  <% role.packages.each do |package| %>
    package '<%= package %>' do
      options '--force-yes'
    end
  <% end %>
<% end %>

# Users
<% users.each do |user| %>
user '<%= user.login %>' do
  supports :manage_home => true
  password '<%= user.password_hash %>'
  home '/home/<%= user.login %>'
  shell '/bin/bash'
  action :create
end
<% end %>
# Administrators
<% administrators.each do |administrator| %>
user '<%= administrator.login %>' do
  supports :manage_home => true
  home '/home/<%= administrator.login %>'
  shell '/bin/bash'
  password '<%= administrator.password_hash %>'
  group 'sudo'
  action :create
end
<% end %>

# Recipes
<% roles.each do |role| %>
  <% role.recipes.each do |recipe| %>
    <% if recipe == 'scapy' %>
# Scapy

# Scapy - Requirements
package "python-crypto"
package "python-pyx"
package "tcpdump"

# Scapy - Install
python_pip "scapy" do
  action :install
  version "2.2.0-dev"
end
    <% elsif recipe == 'sshd_password_login' %>
# sshd_password_login
ruby_block "Ensure password login" do
  block do
    fe = Chef::Util::FileEdit.new("/etc/ssh/sshd_config")
    fe.search_file_replace(/PasswordAuthentication\s+no/,
                               "PasswordAuthentication yes")
    fe.write_file
  end
end
script "restart_sshd" do
  interpreter "bash"
  user "root"
  cwd "/tmp"
  code <<-EOH
if [ -f /etc/init.d/ssh ]
then
  service ssh reload
fi
if [ ! -f /etc/init.d/ssh ]
then
  service sshd reload
fi
  EOH
end
    <% elsif recipe == 'shellinabox' %>
remote_file "/tmp/shellinabox-2.14.tar.gz" do
  source "https://shellinabox.googlecode.com/files/shellinabox-2.14.tar.gz"
  action :create_if_missing
end
script "install_shellinabox" do
  interpreter "bash"
  user "root"
  cwd "/tmp"
  code <<-EOH
  tar -zxf shellinabox-2.14.tar.gz
  cd shellinabox-2.14
  ./configure
  make
  make install
  /usr/local/bin/shellinaboxd -s /:LOGIN&
  crontab -l | { cat; echo "@reboot /usr/local/bin/shellinaboxd -s /:LOGIN&"; } | crontab -

  EOH
  not_if "test -x /usr/local/bin/shellinaboxd"
end

# ELF Infection

    <% elsif recipe == 'elf' %>
script "install_strace" do
  interpreter "bash"
  user "root"
  cwd "/tmp"

  code <<-EOH
  cd /tmp
  git clone https://github.com/kahea/elf
  cd elf
  ./install
  cd /tmp
  touch test-file
  EOH

  not_if "test -e /tmp/test-file"
end

    <% elsif recipe == 'strace' %>

script "install_strace" do

  interpreter "bash"
  user "root"
  cwd "/tmp"
  code <<-EOH
  cd /tmp
  touch test-file
  EOH
  not_if "test -e /tmp/test-file"
end

# Fuzzing

    <% elsif recipe == 'fuzz_attacking' %>

remote_file "start_attack_server" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/start_attack_server"
  path "/usr/bin/start_attack_server"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "send_fuzz_data" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/send_fuzz_data"
  path "/usr/bin/send_fuzz_data"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "attacking_server_reboot" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/nc_server_reboot"
  path "/usr/bin/attacking_server_reboot"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "fuzzing_rules" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/cat_motd"
  path "/usr/bin/fuzzing_rules"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "attacker_motd" do
  source "http://ada.evergreen.edu/~weidav02/attacker_motd.txt"
  path "/etc/motd.tail"
  not_if "test -e /tmp/test-file"
end

script "start_attacking_env" do
  interpreter "bash"
  cwd "/etc/update-motd.d"
  code <<-EOH
  echo "start_attack_server" >> /usr/bin/attacking_server_reboot
  start_attack_server &
  echo "" > /etc/legal
  rm 10* 50* 51* 90* 91* 98*
  touch /tmp/test-file
  EOH
  not_if "test -e /tmp/test-file"
end

    <% elsif recipe == 'fuzz_defending' %>
remote_file "start_defense_server" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/start_defense_server"
  path "/usr/bin/start_defense_server"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "equal" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/equal.py"
  path "/usr/bin/equal"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "doubles_s_and_r" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/doubles_s_and_r"
  path "/usr/bin/doubles_s_and_r"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "fuzzing_rules" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/cat_motd"
  path "/usr/bin/fuzzing_rules"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "defending_server_reboot" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/nc_server_reboot"
  path "/usr/bin/defending_server_reboot"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "blacklist_replace" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/blacklist_replace.py"
  path "/usr/bin/blacklist_replace"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "update_calc" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/update_calc"
  path "/usr/bin/update_calc"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "defender_motd" do
  source "http://ada.evergreen.edu/~weidav02/defender_motd.txt"
  path "/etc/motd.tail"
  not_if "test -e /tmp/test-file"
end

remote_file "get_attacker_input" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/get_attacker_input"
  path "/usr/bin/get_attacker_input"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "submit_calc" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/submit_calc"
  path "/usr/bin/submit_calc"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

script "start_defending_env" do
  interpreter "bash"
  cwd "/etc/update-motd.d"
  code <<-EOH
  echo "start_defense_server" >> /usr/bin/defending_server_reboot
  echo "" > /etc/legal
  rm 10* 50* 51* 90* 91* 98*
  touch /tmp/test-file
  EOH
  not_if "test -e /tmp/test-file"
end

    <% elsif recipe == 'wheelie' %>
ruby_block "Uncomment wheel in sudoers" do
  block do
    fe = Chef::Util::FileEdit.new("/etc/sudoers")
    fe.insert_line_if_no_match(/%wheel\s+ALL=\(ALL\)\s+ALL/,
                               "%wheel ALL=(ALL) ALL")
    fe.write_file
  end
end



  <% elsif recipe == 'scoring' %>
# Scoring Recipe
directory "/tmp/scoring" do
  :create
end
remote_file "scoreagent.rb" do
  source "https://github.com/edurange/scoring/raw/master/scoreagent.rb"
  path "/tmp/scoring/scoreagent.rb"
end
remote_file "scoreplacer.rb" do
  source "https://github.com/edurange/scoring/raw/master/scoreplacer.rb"
  path "/tmp/scoring/scoreplacer.rb"
end
file "/tmp/scoring/answers" do
  mode "0777"
end

script 'get scoring_url' do
  interpreter "bash"
  code 'echo "<%= scoring_url %>" > /tmp/scoring/scoring_url'
end

gem_package "daemons"

script 'run scoreagent' do
  interpreter "bash"
  code <<-EOF
  ruby /tmp/scoring/scoreagent.rb start &
  EOF
end



  <% elsif recipe == 'recon_scorer' %>
# Recon Scorer Recipe
gem_package "daemons"
gem_package "sinatra"
directory "/tmp/scoring/points" do
  :create
  recursive true
  mode 0777
end
file "/tmp/scoring/scoring_pages" do
  content "<%= scenario.scoring_pages %>"
end
file "/tmp/scoring/answers_url" do
  content "<%= scenario.answers_url %>"
end
remote_file "scorer.rb" do
  source "https://github.com/edurange/scoring/raw/master/scorer.rb"
  path "/tmp/scoring/scorer.rb"
end
remote_file "leaderboard.rb" do
  source "https://github.com/edurange/scoring/raw/master/leaderboard.rb"
  path "/tmp/scoring/points/leaderboard.rb"
end

script 'run scorer and download answers' do
  interpreter "bash"
  code <<-EOF
  wget -O /tmp/scoring/answers `cat /tmp/scoring/answers_url`
  ruby /tmp/scoring/scorer.rb start &
  EOF
end

script 'simple http server' do
  interpreter "bash"
  cwd '/tmp/scoring/points'
  code <<-EOF
  ruby leaderboard.rb -o 0.0.0.0 &
  EOF
end



  <% elsif recipe == 'elf_scorer' %>
  # Scorer Recipe
package "git"
package "nasm"
package "apache2"
gem_package "daemons"
gem_package "sinatra"
directory "/tmp/scoring/points" do
  :create
  recursive true
  mode 0777
end
file "/tmp/scoring/scoring_pages" do
  content "<%= scenario.scoring_pages %>"
end
file "/tmp/scoring/answers_url" do
  content "<%= scenario.answers_url %>"
end
remote_file "scorer.rb" do
  source "https://github.com/edurange/scoring/raw/master/scorer.rb"
  path "/tmp/scoring/scorer.rb"
end
remote_file "leaderboard.rb" do
  source "https://github.com/edurange/scoring/raw/master/leaderboard.rb"
  path "/tmp/scoring/points/leaderboard.rb"
end

script "install_elfit" do
  interpreter "bash"
  user "root"
  cwd "/tmp"
  code <<-EOH
  git clone https://github.com/NickStephens/elfit.git
  cd elfit
  make
  make install
  cd /tmp

  EOH
  not_if "test -x /usr/bin/elfit"
end

remote_file "elf-v1.0.1.tar.gz" do
  source "https://github.com/edurange/scoring/archive/elf-v1.0.1.tar.gz"
  path "/tmp/elf-v1.0.1.tar.gz"
end

bash "install_elf-inf" do
  # This code must create a answer file...
  code <<-EOF
  cd /tmp/
  tar zxvf elf-v1.0.1.tar.gz
  cd scoring-elf-v1.0.1/
  mv bad-ls ..
  cd /tmp/bad-ls
  make
  mkdir /tmp/dist
  cp /tmp/bad-ls/bad-ls /tmp/dist
  cd /tmp
  tar -cvf dist.tar dist
  mv /tmp/dist.tar /var/www
  touch /tmp/done
  chmod +x /tmp/done
  EOF

  not_if "test -x /tmp/done"
end

script 'copy answers and run scorer' do
  interpreter "bash"
  code <<-EOF
  cd /tmp/
  ruby -ne 'puts $_.match(/0x.*-0x.*$/).to_s.gsub("-","\n") if $_.include?("0x")' elfit-output 1>/tmp/scoring/answers
  ruby /tmp/scoring/scorer.rb start
  EOF
end

script 'simple http server' do
  interpreter "bash"
  cwd '/tmp/scoring/points'
  code <<-EOF
  ruby leaderboard.rb -o 0.0.0.0 &
  EOF
end

  <% elsif recipe == 'fuzz_scorer' %>
# Fuzzing Scorer Recipe
package "zip"
file "/tmp/scoring/scoring_pages" do
  content "<%= scenario.scoring_pages %>"
end
file "/tmp/scoring/answers_url" do
  content "<%= scenario.answers_url %>"
end

remote_file "scoring_loop" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/scoring_loop"
  path "/usr/bin/scoring_loop"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "scoring_listener" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/scoring_listener"
  path "/usr/bin/scoring_listener"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "scoring_server_reboot" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/scoreserver_reboot"
  path "/usr/bin/scoring_server_reboot"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "blacklist_replace" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/blacklist_replace.py"
  path "/usr/bin/blacklist_replace"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "equal" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/equal.py"
  path "/usr/bin/equal"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "start_scoring_server" do
  source "https://raw.githubusercontent.com/clampz/fuzzy_challenge/master/src/start_scoring_server"
  path "/usr/bin/start_scoring_server"
  mode "0765"
  not_if "test -e /tmp/test-file"
end

remote_file "refcalc" do
  source "http://ada.evergreen.edu/~weidav02/refcalc.zip"
  path "/usr/bin/refcalc.zip"
  not_if "test -e /tmp/test-file"
end

script 'start_scoring_server' do
  interpreter "bash"
  cwd '/usr/bin'
  code <<-EOF
  unzip refcalc.zip
  cd refcalc; make
  echo "rm /tmp/calc_in_out; touch /tmp/calc_in_out; start_scoring_server" >> /usr/bin/scoring_server_reboot
  scoring_loop 2> /tmp/scoring/scoring_loop_err_out.txt &
  start_scoring_server
  touch /tmp/calc_in_out
  touch /tmp/test-file
  EOF
  not_if "test -e /tmp/test-file"
end

  <% end %>
  <% end %>
<% end %>
